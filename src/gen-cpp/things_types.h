/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef things_TYPES_H
#define things_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/stdcxx.h>


namespace Things {

enum Offsets {
  NAME = 0,
  PROTO = 1,
  INSIDE = 2,
  PROXIMITY = 3,
  GENUS = 4,
  MASS = 5,
  TEMPERATURE = 6,
  QUANTITY = 7,
  KEY = 8,
  OPENSKILL = 9,
  OPENDIFFICULTY = 10,
  TO_THING = 11,
  FROM_THING = 12,
  METERSWIDE = 13,
  THETA = 14,
  MODHUNGER = 15,
  MODTHIRST = 16,
  MODDRUNK = 17,
  SEVERITY = 18,
  DURATION = 19,
  HOURS = 20,
  ALIGHT = 21,
  USEHOW = 22,
  TOOLSKILL = 23,
  CHARGES = 24,
  STRENGTH = 25,
  HEALTH = 26,
  AGILITY = 27,
  POSITION = 28,
  MOVEMENT = 29,
  VISION = 30,
  HEARING = 31,
  SCENT = 32,
  INTELLECT = 33,
  WILLPOWER = 34,
  AWARENESS = 35,
  FOCUS = 36,
  COURAGE = 37,
  DISPOSITION = 38,
  MOOD = 39,
  ERRATIC = 40,
  STATE = 41,
  HUNGER = 42,
  THIRST = 43,
  DRUNK = 44,
  CONC_INTERVAL = 45,
  COST_HIT = 46,
  COST_MANA = 47,
  COST_MOVEMENT = 48,
  DECAYTIME = 49,
  CONTAINERFLAGS = 50,
  MAXWEIGHT = 51,
  PICK_MODIFIER = 52,
  SCABBARDOF = 53,
  CORPSEOF = 54,
  MOUNTABLEFLAGS = 55,
  MAXCARRY = 56,
  ARMORCHART = 57,
  SHIELDBONUS = 58,
  PROFICIENCY = 59,
  TOHIT = 60,
  DAMBONUS = 61,
  DAMTYPE = 62,
  AMMO = 63,
  MAXAMMO = 64,
  SHOOTRANGE = 65,
  SHOOTSPEED = 66,
  WEAPONSKILL = 67,
  SWINGMESSAGE = 68,
  THRUSTMESSAGE = 69,
  SWINGTOHIT = 70,
  SWINGBONUS = 71,
  SWINGDAMTYPE = 72,
  SWINGSPEED = 73,
  THRUSTTOHIT = 74,
  THRUSTBONUS = 75,
  THRUSTDAMTYPE = 76,
  THRUSTSPEED = 77,
  PARRYSPEED = 78,
  PARRYBONUS = 79,
  HITRANGE = 80,
  TOP = 81
};

extern const std::map<int, const char*> _Offsets_VALUES_TO_NAMES;

std::ostream& operator<<(std::ostream& out, const Offsets val);

enum Position {
  Limp = 0,
  Prone = 1,
  Upright = 2,
  Sitting = 3,
  Kneeling = 4,
  Crouching = 5,
  Crawling = 6,
  Standing = 7,
  Floating = 8,
  NUM_POSITIONS = 9
};

extern const std::map<int, const char*> _Position_VALUES_TO_NAMES;

std::ostream& operator<<(std::ostream& out, const Position val);

enum State {
  Dead = 0,
  Dying = 1,
  MortallyWounded = 2,
  Incapacitated = 3,
  Asleep = 4,
  Stunned = 5,
  Immobile = 6,
  Resting = 7,
  Fighting = 8,
  Riding = 9,
  Audible = 10,
  Okay = 11,
  NUM_STATES = 12
};

extern const std::map<int, const char*> _State_VALUES_TO_NAMES;

std::ostream& operator<<(std::ostream& out, const State val);

enum ThingFlag {
  DELETED = 1,
  APPROVED = 2,
  NPC = 4,
  MALE = 8,
  FEMALE = 16,
  PLURAL = 32,
  HIDDEN = 64,
  FROZEN = 128,
  OPENABLE = 256,
  OPEN = 512,
  SEETHRU = 1024,
  INVSTART = 2048,
  NUM_THINGFLAGS = 2049
};

extern const std::map<int, const char*> _ThingFlag_VALUES_TO_NAMES;

std::ostream& operator<<(std::ostream& out, const ThingFlag val);

} // namespace

#endif
