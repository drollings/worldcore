/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "pronouns_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>

namespace Pronouns {

int _kPronounsValues[] = {
  UNDEFINED,
  NEUTER,
  MALE,
  FEMALE,
  PLURAL,
  TOP
};
const char* _kPronounsNames[] = {
  "UNDEFINED",
  "NEUTER",
  "MALE",
  "FEMALE",
  "PLURAL",
  "TOP"
};
const std::map<int, const char*> _Pronouns_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kPronounsValues, _kPronounsNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));

std::ostream& operator<<(std::ostream& out, const Pronouns val) {
  std::map<int, const char*>::const_iterator it = _Pronouns_VALUES_TO_NAMES.find(val);
  if (it != _Pronouns_VALUES_TO_NAMES.end()) {
    out << it->second;
  } else {
    out << static_cast<int>(val);
  }
  return out;
}

} // namespace
